---
- name: Pull images
  command: /usr/bin/docker pull "{{ item }}:{{ kubernetes_version | default ('latest') }}"
  with_items:
  - "gcr.io/google_containers/kube-proxy-amd64"
  - "gcr.io/google_containers/kube-controller-manager-amd64"
  - "gcr.io/google_containers/kube-apiserver-amd64"
  - "gcr.io/google_containers/kube-scheduler-amd64"
  tags:
  - prepull_images
  register: command_result
  changed_when: '"Image is up to date" not in command_result.stdout'

- name: Generate cluster token
  command: /usr/bin/kubeadm token generate
  register: kubeadm_token_generate
  when: kubeadm_token is not defined
  tags: 
   - init

- set_fact: kubeadm_token={{ kubeadm_token_generate.stdout }}
  when: kubeadm_token is not defined
  tags:
   - init

#TODO: It will need adjustments on ansible_play_hosts when kubeadm will support master HA #{{ ansible_play_hosts }}
- name: Initialize cluster
  command: /usr/bin/kubeadm init --token {{ kubeadm_token }} --kubernetes-version {{ kubernetes_version | default ('latest') }} {{ kubeadm_init_extra_params }} --apiserver-advertise-address {{ inventory_hostname }},{{ inventory_hostname_short }} --apiserver-cert-extra-sans {{ inventory_hostname }},{{ inventory_hostname_short }},{{ apiserver_cert_extra_sans | default('kubernetes') }} --service-dns-domain {{ service_dns_domain | default('cluster.local') }}
  tags:
   - init

#This is required when proxy is used, and the inventory_hostname is defined with fqdn
#to ensure the connection to local server is not going via proxy (expecially when applying addons)
- replace:
    dest: /etc/kubernetes/admin.conf
    regexp: '(\s+)(server: https:\/\/)[A-Za-z0-9\-\.]+:'
    replace: '\1\2{{ inventory_hostname }}:'
    backup: yes
  #when: proxy_env is defined and #inventory_hostname is fqdn
  tags:
   - init

- name: export KUBECONFIG in master's ~/.bash_profile
  lineinfile: 
    dest: ~/.bash_profile
    line: "export KUBECONFIG=/etc/kubernetes/admin.conf"
    state: present
  when: shell is undefined or shell == 'bash'

- name: Create cluster network
  command: /usr/bin/kubectl apply -f {{ item }}
  with_items: "{{ kubeadm_network_addons_urls | default ('') }}"
  environment:
    KUBECONFIG:  /etc/kubernetes/admin.conf
    http_proxy:  '{{proxy_env.http_proxy | default ("") }}'
    https_proxy: '{{proxy_env.https_proxy | default ("") }}'
    no_proxy:    '{{proxy_env.no_proxy | default ("") }}'
  when: kubeadm_network_addons_urls is defined
  tags:
   - network_addons
    
- name: Wait 1 minute for images pulls and cluster services to start
  pause: minutes=1
